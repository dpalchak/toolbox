//{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
//}

{
	"Empty class": {
		"prefix": "class",
		"body": [
			"class $1 {",
			"\t$0",
			"};"
		],
		"description": "Empty class"
	},
	"Empty struct": {
		"prefix": "struct",
		"body": [
			"struct $1 {",
			"\t$0",
			"};"
		],
		"description": "Empty struct"
	},
	"Empty union": {
		"prefix": "union",
		"body": [
			"union $1 {",
			"\t$0",
			"};"
		],
		"description": "Empty union"
	},
	"Empty enum class": {
		"prefix": "enum class",
		"body": [
			"enum class $1 : $2 {",
			"\t$0",
			"};"
		],
		"description": "Empty enum class"
	},
	"Empty namespace": {
		"prefix": "namespace",
		"body": [
			"namespace $1 {",
			"",
			"$0",
			"",
			"} // namespace $1"
		],
		"description": "Empty namespace"
	}
}
